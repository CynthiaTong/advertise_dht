util = dy_import_module("util.r2py")

class Node:

  def __init__(self, id, ip, port):
    self.id = str(id)
    self.long_id = util.string_to_long(self.id)
    self.ip = ip
    self.port = port
    self.replied = 0 
    self.last_replied = 0 
    self.last_queried = 0 
    self.pinged = 0 
    self.last_pinged = 0 

  def distance_to(self, node):
    return self.long_id ^ node.long_id

  def compare_distance(self, node_1, node_2):
    return self.distance_to(node_1) - self.distance_to(node_2)

  # bit torrent defination of a good node 
  # pinged less than 3 times 
  # replied in the last 15 minutes 
  # ever replied, and queried in the last 15 minutes 
  def good_node(self):
    return (self.pinged < 3 and       
            (self.last_replied > getruntime() - 60*15 or   
            (self.replied and self.last_queried > getruntime() - 60*15)))

  def __repr__(self):
    return repr([self.id, self.ip, self.port])

  def __str__(self):
    return "%s %s:%s" % (self.id, self.ip, str(self.port))
