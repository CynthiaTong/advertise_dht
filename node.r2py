dy_import_module_symbols("sha.r2py")
dy_import_module_symbols("random.r2py")

class Node:

  def __init__(self, id, ip=None, port=None):
    self.id = sha_hexhash(str(id))
    self.long_id = long(self.id, 16)
    self.ip = ip
    self.port = port

  def distance_to(self, node):
    return self.long_id ^ node.long_id

  def compare_distance(self, node_1, node_2):
    return self.distance_to(node_1) - self.distance_to(node_2)

  def __repr__(self):
    return repr([self.long_id, self.ip, self.port])

  def __str__(self):
    return "%s %s:%s" % (self.long_id, self.ip, str(self.port))

# long to bin string 
def bin(a):
  s=''
  t={'0':'000','1':'001','2':'010','3':'011',
  '4':'100','5':'101','6':'110','7':'111'}

  for c in oct(a)[1:-1]:
    s+=t[c]
  return s
  