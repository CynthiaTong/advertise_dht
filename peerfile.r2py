
MAXPEERS = 200
# export_peers_time = getruntime() + 60 * 5


class NonexistingPeerFileError(Exception):
  """ Error when peer file does not exist """
class GeneralPeerFileError(Exception):
  """ Other general error when reading from peer file """


def import_peers(filename):
  try:
    peerfile = openfile(filename, False)
    
    content = peerfile.readat(None, 0)
    lines = content.split("\n")
    peers = list()
    for l in lines:
      items = l.split(",")
      if len(items) == 3:
        peers.append(items)

    peerfile.close()
    return peers 
  except FileNotFoundError: 
    raise NonexistingPeerFileError("Peer file %s does not exist." % filename)
  except Exception, e:
    raise GeneralPeerFileError("Error importing from peer file %s, %s" % (filename, repr(e)))

def export_peers(peerslist, filename):
  if len(peerslist) == 0:
    log ("No peers to export.\n")
    return 

  # might not need this, if we're only exporting on shutdown 
  # if getruntime() < export_peers_time:
  #   log ("Haven't reached export time. No peers exported.\n")

  peerfile = openfile(filename, True)
  
  offset = 0 
  numpeers = 0 
  for l in peerslist:
    peerfile.writeat(l, offset)
    offset += len(l)
    numpeers += 1 
    if numpeers >= MAXPEERS:
      break 

  peerfile.close()
  return numpeers 
