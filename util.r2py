dy_import_module_symbols("time.r2py")

def get_time():
	timeport = list(getresources()[0]["connport"])[0]
	time_updatetime(timeport)
	return time_gettime()

# 4-byte transaction ids ??? without using bytearray? 
def make_tid(prefix, sequence):
	output = [ord(n) & 0xFF for n in prefix]
	# log (int(sequence).bit_length(),"\n")
	binary_seq = "{0:b}".format(sequence)[:16] # get the first 16 bits (2 bytes) of the integer 
	# log (len(binary_seq), "\n")
	output.append(int(binary_seq, 2))
	# log (output[2].bit_length(), "\n")
	# log(output, "\n")
	# total_bytes = 0 
	# for n in output:
	# 	total_bytes += (n.bit_length() + 7) // 8 
	# log(total_bytes, "\n")

	# return a character list 
	return output 

# return the sequence taken from tid if matches, else return -1 
def tid_match(tid, prefix):
	if tid[0] == ord(prefix[0]) and tid[1] == ord(prefix[1]):
		return tid[2]
	else:
		return -1 
